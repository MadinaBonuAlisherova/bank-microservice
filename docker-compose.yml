version: '2.7'

services:
  postgres:
    image: postgres:13.2-alpine
    container_name: postgres
    restart: on-failure
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - aplication_postgres_data:/var/lib/postgresql/data

  postgres1:
    image: postgres:13.2-alpine
    container_name: postgres1
    restart: on-failure
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - aplication_postgres_data1:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper-local
    restart: on-failure
    ports:
      - "2181:2181"
    networks:
      - local
      - docker-elk_elk
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka1:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka1
    hostname: kafka1
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - local
      - docker-elk_elk
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: INTERNAL://kafka1:29092, EXTERNAL://kafka1:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:29092, EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
  kafka2:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka2
    hostname: kafka2
    restart: on-failure
    depends_on:
      - zookeeper
      - kafka1
    ports:
      - "9093:9092"
    networks:
      - local
      - docker-elk_elk
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: INTERNAL://kafka2:29092, EXTERNAL://kafka2:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:29092, EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
  kafka3:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka3
    hostname: kafka3
    restart: on-failure
    depends_on:
      - zookeeper
      - kafka1
    ports:
      - "9094:9092"
    networks:
      - local
      - docker-elk_elk
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: INTERNAL://kafka3:29092, EXTERNAL://kafka3:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:29092, EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
  kafka-ui:   #http://localhost:9000/ to run local kafka ui locally
   image: obsidiandynamics/kafdrop:3.27.0
   container_name: kafka-ui
   restart: on-failure
   environment:
     KAFKA_BROKERCONNECT: kafka1:29092,kafka2:29092,kafka3:29092
     SERVER_SERVLET_CONTEXTPATH: /
     JVM_OPTS: "-Xms32M -Xmx64M"
   ports:
     - "9000:9000"
volumes:
  aplication_postgres_data:
    driver: local
  aplication_postgres_data1:
    driver: local
networks:
  local:
    driver: bridge
  docker-elk_elk:
    external: true

  #elastic_data: {}
